//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlarmWorkflow.BackendService.Settings.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AlarmWorkflow.BackendService.Settings.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data value for setting &apos;{0}&apos; exceeds database limits! If this value is important for you, please report this error to the developers! Please see log for further information..
        /// </summary>
        internal static string SettingAddOrUpdateConstraintError {
            get {
                return ResourceManager.GetString("SettingAddOrUpdateConstraintError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not add or update setting &apos;{0}&apos;. Please see log for further information..
        /// </summary>
        internal static string SettingAddOrUpdateError {
            get {
                return ResourceManager.GetString("SettingAddOrUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encountered not supported node type of &apos;{0}&apos; in setting &apos;{1}&apos;. Only plain values and CDATA-nodes are currently supported!.
        /// </summary>
        internal static string SettingsConfigurationEmbResInvalidValueContent {
            get {
                return ResourceManager.GetString("SettingsConfigurationEmbResInvalidValueContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing of settings configuration file from assembly &apos;{0}&apos; failed. The file may contain invalid or missing information that is expected to be present in the specified configuration version..
        /// </summary>
        internal static string SettingsConfigurationEmbResParseFailed {
            get {
                return ResourceManager.GetString("SettingsConfigurationEmbResParseFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings configuration file found in assembly &apos;{0}&apos; contains invalid XML data!.
        /// </summary>
        internal static string SettingsConfigurationEmbResXmlException {
            get {
                return ResourceManager.GetString("SettingsConfigurationEmbResXmlException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The settings display configuration file found in assembly &apos;{0}&apos; contains invalid XML data!.
        /// </summary>
        internal static string SettingsDisplayConfigurationEmbResXmlException {
            get {
                return ResourceManager.GetString("SettingsDisplayConfigurationEmbResXmlException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was no SettingsDisplayConfiguration found in this instance. Perhaps this instance was not initialized with &quot;IncludeDisplayConfiguration&quot; or it was and the configuration is not available at this point..
        /// </summary>
        internal static string SettingsDisplayConfigurationNotFoundException {
            get {
                return ResourceManager.GetString("SettingsDisplayConfigurationNotFoundException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;SettingsDisplayConfiguration&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;xs:element name=&quot;Identifier&quot;&gt;
        ///          &lt;xs:complexType&gt;
        ///            &lt;xs:sequence&gt;
        ///              &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;Setting&quot;&gt;
        ///                &lt;xs:complexType&gt;
        ///                  &lt;xs:attribute name=&quot;Name&quot; type=&quot;xs:string&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsInfoSchema {
            get {
                return ResourceManager.GetString("SettingsInfoSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished scan of setting display configurations in {0} milliseconds..
        /// </summary>
        internal static string SettingsManagerScanSettingsDisplayConfigurationFinished {
            get {
                return ResourceManager.GetString("SettingsManagerScanSettingsDisplayConfigurationFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished scan of setting definitions in {0} milliseconds..
        /// </summary>
        internal static string SettingsManagerScanSettingsFinished {
            get {
                return ResourceManager.GetString("SettingsManagerScanSettingsFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user.settings is malformed! Personalized user settings cannot be loaded. Please review your file. If you are sure that you haven&apos;t done any custom modifications to this file, please contact the team..
        /// </summary>
        internal static string SettingsManagerUserSettingsFileInvalid {
            get {
                return ResourceManager.GetString("SettingsManagerUserSettingsFileInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User settings loaded..
        /// </summary>
        internal static string SettingsManagerUserSettingsFileLoaded {
            get {
                return ResourceManager.GetString("SettingsManagerUserSettingsFileLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User settings file does not exist; skipping..
        /// </summary>
        internal static string SettingsManagerUserSettingsFileSkip {
            get {
                return ResourceManager.GetString("SettingsManagerUserSettingsFileSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///  &lt;xs:element name=&quot;SettingsConfiguration&quot;&gt;
        ///    &lt;xs:complexType&gt;
        ///      &lt;xs:sequence&gt;
        ///        &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;Setting&quot;&gt;
        ///          &lt;xs:complexType&gt;
        ///            &lt;xs:simpleContent&gt;
        ///              &lt;xs:extension base=&quot;xs:string&quot;&gt;
        ///                &lt;xs:attribute name=&quot;Name&quot; type=&quot;xs:string&quot; use=&quot;required&quot;&gt;
        ///                  &lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SettingsSchema {
            get {
                return ResourceManager.GetString("SettingsSchema", resourceCulture);
            }
        }
    }
}
